#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
%\usetheme{Warsaw} 
%\usetheme{Rochester} 
%\usetheme{Madrid} 
%\usetheme{Pittsburgh} 
%\usetheme{Antibes} % beamer guide
%\usetheme{Montpellier} 
%\usetheme{Berkeley} 
%\usetheme{PaloAlto} 
%\usetheme{Goettingen} 
%\usetheme{Marburg} 
%\usetheme{Hannover} 
%\usetheme{Berlin} 
%\usetheme{Ilmenau} 
%\usetheme{Dresden}
%\usetheme{Darmstadt} 
\usetheme{Frankfurt} 
%\usetheme{Singapore} % I used
%\usetheme{Szeged} 
%\usetheme{Copenhagen} 
%\usetheme{Malmoe}
%\usecolortheme{sidebartab}
%\usecolortheme{albatross}
%\usecolortheme{beetle}
%\usecolortheme{crane}
\usecolortheme{default}
%\usecolortheme{dove}
%\usecolortheme{fly}
%\usecolortheme{lily}
%\usecolortheme{orchid}
%\usecolortheme{rose}
%\usecolortheme{seagull}
%\usecolortheme{seahorse}
%\usecolortheme{sidebartab}
%\usecolortheme{structure}
%\usecolortheme{whale}
%\usefonttheme{structurebold}
%\usefonttheme{default}
%\usefonttheme{professionalfonts}
%\usefonttheme{serif}
%\usefonttheme{structurebold}
%\usefonttheme{structureitalicserif}
%\usefonttheme{structuresmallcapsserif}
%\documentclass[mathserif]{beamer} % sans (text) + mathserif
%\usepackage{lucidaso} % Lucida Bright (SO Version)
%\usepackage[scaled]{helvet}
%\usepackage[small]{eulervm} % Euler VM
%\xdefinecolor{lavendar}{rgb}{0.8,0.6,1}
%\xdefinecolor{olive}{cmyk}{0.64,0,0.95,0.4}
%\colorlet{structure}{green!60!black}
%\beamertemplateshadingbackground{blue!5}{yellow!10}
%\usestructuretemplate{\color{structure}}{}
%\usecolortheme{beaver}
%\usecolortheme{seagull}
%\usecolortheme{seahorse}
\usepackage{hyperref}
% footer
\useoutertheme{infolines}
\usepackage{adjustbox}
%\setbeamertemplate{headline}{\vskip-2pt}
\end_preamble
\options slidetop, compress, blue, mathserif, color=option
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Numerical Methods for New Keynesian ZLB Models:
\begin_inset Newline newline
\end_inset

 Part I
\begin_inset Argument 1
status open

\begin_layout Plain Layout
NKZLB
\end_layout

\end_inset


\end_layout

\begin_layout Author
Takeki Sunakawa
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Takeki Sunakawa
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
- optional, use only with lots of authors
\end_layout

\begin_layout Plain Layout
- if there are really lots of authors, use 
\begin_inset Quotes eld
\end_inset

Author et al.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Date
January 10, 2018
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
What is covered
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Equilibrium with a simple Taylor rule
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Tauchen's (1986) method for approximating AR(1) process
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Equilibrium under the optimal discretionary policy (Adam and Billi, 2007)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Two-state shock process
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Exogenous shocks take only 
\begin_inset Formula $N_{s}=2$
\end_inset

 values, 
\begin_inset Formula $s_{t}\in\{s_{H},s_{L}\}$
\end_inset

.
 The stochastic process follows a Markov chain with the transition matrix:
\begin_inset Formula 
\[
\left[\begin{array}{cc}
1-p_{H} & p_{H}\\
1-p_{L} & p_{L}
\end{array}\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $p_{H}$
\end_inset

 is the frequency of crisis and 
\begin_inset Formula $p_{L}$
\end_inset

 is the duration of crisis.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Equilibrium with Taylor rule
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Equilibrium conditions are
\begin_inset Formula 
\begin{align*}
 & y_{t}=E_{t}y_{t+1}-\left(i_{t}-E_{t}\pi_{t+1}-s_{t}\right),\\
 & \pi_{t}=\kappa y_{t}+\beta E_{t}\pi_{t+1},\\
 & i_{t}^{*}=r^{*}+\phi_{\pi}E_{t}\pi_{t+1},
\end{align*}

\end_inset

 and the zero lower bound 
\begin_inset Formula 
\[
i_{t}=\max\left\{ 0,i_{t}^{*}\right\} .
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Solving the model: Two routes
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The solution has a form of (we omit time subscripts for the policy function)
\begin_inset Formula 
\[
\begin{array}{ccc}
y=y(s), & \pi=\pi(s), & i=i(s).\end{array}
\]

\end_inset


\end_layout

\begin_layout Itemize
We are solving the same model with two different methods.
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Analytical solution.
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Itemize
Numerical solution, using the policy function iteration (time iteration).
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Analytical solution
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We know that the functions have only two values, i.e.,
\begin_inset Formula 
\[
\begin{array}{ccc}
y=\begin{cases}
y_{H},\\
y_{L},
\end{cases} & \pi=\begin{cases}
\pi_{H},\\
\pi_{L},
\end{cases} & i=\begin{cases}
i_{H},\\
i_{L}.
\end{cases}\end{array}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Analytical solution, cont'd
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We assume that 
\begin_inset Formula $i_{H}>0$
\end_inset

 and 
\begin_inset Formula $i_{L}=0$
\end_inset

.
 Then we have
\begin_inset Formula 
\begin{align*}
 & y_{H}=(1-p_{H})y_{H}+p_{H}y_{L}-\left(i_{H}-\left[(1-p_{H})\pi_{H}+p_{H}\pi_{L}\right]-s_{H}\right),\\
 & \pi_{H}=\kappa y_{H}+\beta\left[(1-p_{H})\pi_{H}+p_{H}\pi_{L}\right],\\
 & i_{H}=r^{*}+\phi_{\pi}\left[(1-p_{H})\pi_{H}+p_{H}\pi_{L}\right],\\
 & y_{L}=(1-p_{L})y_{H}+p_{L}y_{L}-\left(0-\left[(1-p_{L})\pi_{H}+p_{L}\pi_{L}\right]-s_{L}\right),\\
 & \pi_{L}=\kappa y_{L}+\beta\left[(1-p_{L})\pi_{H}+p_{L}\pi_{L}\right],\\
 & i_{L}=0.
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
There are 6 equations and 6 unknowns, so we can solve for the unknowns.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Numerical solution: Policy function iteration
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We can solve the same model with the policy function iteration method.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
The method takes four steps:
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Initial guess for the policy function
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Enumerate
Solving for endogenous variables at each grid
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Enumerate
Updating the policy function
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Enumerate
Repeat 2-3 until convergence
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Policy function iteration: Initial guess
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A guess of the policy functions
\begin_inset Formula 
\[
\begin{array}{ccc}
y=y^{(0)}(s), & \pi=\pi^{(0)}(s), & i=i^{(0)}(s).\end{array}
\]

\end_inset


\end_layout

\begin_layout Itemize
Consider the general case of 
\begin_inset Formula $N_{s}\geq2$
\end_inset

.
 We know the values of the functions only at each 
\emph on
grid point
\emph default
, i.e.,
\begin_inset Formula 
\begin{align*}
y^{(0)}(s) & =[y_{1},y_{2},...,y_{N_{s}}]',\\
\pi^{(0)}(s) & =[\pi_{1},\pi_{2},...,\pi_{N_{s}}]',\\
i^{(0)}(s) & =[i_{1},i_{2},...,i_{N_{s}}]'.
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Policy function iteration: Solving at each grid
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
At each grid point 
\begin_inset Formula $k=1,...,N_{s}$
\end_inset

, we solve
\begin_inset Formula 
\begin{align*}
 & y_{k}=y^{e}-\left(i_{k}-\pi^{e}-s_{k}\right),\\
 & \pi_{k}=\kappa y_{k}+\beta\pi^{e},\\
 & i_{k}=\max\left\{ 0,r^{*}+\phi_{\pi}\pi^{e}\right\} ,
\end{align*}

\end_inset

 for 
\begin_inset Formula $(y_{k},\pi_{k},i_{k})$
\end_inset

, where 
\begin_inset Formula 
\begin{align*}
y^{e} & =\sum_{l=1}^{N_{s}}p(k,l)y^{(0)}(s_{l}),\\
\pi^{e} & =\sum_{l=1}^{N_{s}}p(k,l)\pi^{(0)}(s_{l}).
\end{align*}

\end_inset

 and 
\begin_inset Formula $p(k,l)$
\end_inset

 is the 
\begin_inset Formula $(k,l)$
\end_inset

 element of the transition matrix.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Policy function iteration: Updating and convergence
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Once this is done for all the grid points, we update
\begin_inset Formula 
\begin{align*}
y^{(1)}(s) & =[y_{1},y_{2},...,y_{N}]',\\
\pi^{(1)}(s) & =[\pi_{1},\pi_{2},...,\pi_{N}]',\\
i^{(1)}(s) & =[i_{1},i_{2},...,i_{N}]'.
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
We repeat the procedure until the policy functions converge, i.e., 
\begin_inset Formula $\left\Vert x^{(j)}(s)-x^{(j-1)}(s)\right\Vert <\epsilon$
\end_inset

 for 
\begin_inset Formula $x\in\{y,\pi,i\}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Tauchen's method
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Tauchen (1986) developed a method for approximating AR(1) stochastic process
 by using Markov chain.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
We have the following AR(1) stochastic process
\begin_inset Formula 
\begin{align*}
x'=c+\rho x+\varepsilon', & \varepsilon'\sim N(0,\sigma_{\varepsilon}^{2}).
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
We want to approximate the stochastic process by a Markov chain 
\begin_inset Formula $x_{k}\in\{x_{1},x_{2},...,x_{N}\}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Tauchen's method: Grid points
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We set the grid points for 
\begin_inset Formula $x$
\end_inset

:
\begin_inset Formula 
\[
x_{k}\in\mathcal{I}=\{x_{1},x_{2},...,x_{N}\},
\]

\end_inset

 where 
\begin_inset Formula $k$
\end_inset

 is an index for the set of grid points 
\begin_inset Formula $\mathcal{I}$
\end_inset

.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
For example, we set 
\begin_inset Formula $x_{1}=\frac{-m\sigma_{\varepsilon}}{\sqrt{1-\rho^{2}}}$
\end_inset

, 
\begin_inset Formula $x_{N}=\frac{m\sigma_{\varepsilon}}{\sqrt{1-\rho^{2}}}$
\end_inset

 and 
\begin_inset Formula $x_{k}=x_{k-1}+w$
\end_inset

 for 
\begin_inset Formula $k=2,...,N-1$
\end_inset

, where 
\begin_inset Formula $w=\frac{x_{N}-x_{1}}{N-1}$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Tauchen's method: Transition matrix
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Given the grid points for 
\begin_inset Formula $x$
\end_inset

.
 What is the probablity of moving from one point 
\begin_inset Formula $x_{k}$
\end_inset

 to another 
\begin_inset Formula $x_{l}$
\end_inset

?
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
We know
\begin_inset Formula 
\[
\varepsilon'=x'-c-\rho x_{k}\sim N(0,\sigma_{\varepsilon}^{2}).
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Tauchen's method: Transition matrix, cont'd
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Then, the probability of 
\begin_inset Formula $x'\in\left[x_{l}-\frac{w}{2},x_{l}+\frac{w}{2}\right]$
\end_inset

 can be used as approximation.
 That is,
\begin_inset Formula 
\[
p_{kl}=\Phi\left(x_{l}+\frac{w}{2}-c-\rho x_{k}\right)-\Phi\left(x_{l}-\frac{w}{2}-c-\rho x_{k}\right),
\]

\end_inset

 where 
\begin_inset Formula $\Phi\left(\cdot\right)$
\end_inset

 is the cdf of 
\begin_inset Formula $N(0,\sigma_{\varepsilon}^{2})$
\end_inset

.
 Be careful at the boundary points.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Once this is done for all 
\begin_inset Formula $k,l$
\end_inset

, we have the transition matrix
\begin_inset Formula 
\[
P=\left[\begin{array}{cccc}
p_{11} & \cdots & \cdots & p_{1N}\\
p_{21} & \ddots &  & \vdots\\
\vdots &  & \ddots & \vdots\\
p_{N1} & \cdots & \cdots & p_{NN}
\end{array}\right].
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Optimal Discretionary Policy
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The policymaker chooses 
\begin_inset Formula $\{\pi_{t},y_{t},i_{t}\}$
\end_inset

 so as to maximize
\begin_inset Formula 
\[
V_{0}\equiv-E_{0}\sum_{t=0}^{\infty}\beta^{t}\left(\pi_{t}^{2}+\lambda y_{t}^{2}\right)
\]

\end_inset

 subject to 
\begin_inset Formula 
\begin{align*}
 & y_{t}=E_{t}y_{t+1}-\left(i_{t}-E_{t}\pi_{t+1}\right)+g_{t},\\
 & \pi_{t}=\kappa y_{t}+\beta E_{t}\pi_{t+1}+u_{t},\\
 & i_{t}\geq0,
\end{align*}

\end_inset

 taking 
\begin_inset Formula $E_{t}y_{t+1}$
\end_inset

 and 
\begin_inset Formula $E_{t}\pi_{t+1}$
\end_inset

 as given.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Shock processes
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Exogenous shocks are given by
\begin_inset Formula 
\begin{align*}
 & g_{t}=(1-\rho_{g})g+\rho_{g}g_{t-1}+\varepsilon_{g,t},\\
 & u_{t}=\rho_{u}u_{t-1}+\varepsilon_{u,t},
\end{align*}

\end_inset

 where 
\begin_inset Formula $\varepsilon_{g,t}\sim N(0,\sigma_{g}^{2})$
\end_inset

 and 
\begin_inset Formula $\varepsilon_{u,t}\sim N(0,\sigma_{u}^{2})$
\end_inset

.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Note that 
\begin_inset Formula $g=r^{*}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Optimal Discretionary Policy: Lagrangean
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We know that Markov-perfect equilibrium has only natural state variables.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Lagrangean is
\begin_inset Formula 
\begin{align*}
\mathcal{L} & \equiv E_{0}\sum\beta^{t}\left(\pi_{t}^{2}+\lambda y_{t}^{2}\right)+2\phi_{PC,t}\left(-\pi_{t}+\kappa y_{t}+\beta E_{t}\pi_{t+1}+u_{t}\right)\\
 & +2\phi_{EE,t}\left(-y_{t}-i_{t}+E_{t}y_{t+1}+E_{t}\pi_{t+1}+g_{t}\right)+2\phi_{ZLB,t}i_{t}.
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
First-order necessary conditions are
\begin_inset Formula 
\begin{align*}
\partial\pi_{t}: & \pi_{t}-\phi_{PC,t}=0,\\
\partial y_{t}: & \lambda y_{t}+\kappa\phi_{PC,t}-\phi_{EE,t}=0,\\
\partial i_{t}: & -\phi_{EE,t}+\phi_{ZLB,t}=0.
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Optimal Discretionary Policy: Complementary slackness
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Complementary slackness condition:
\begin_inset Formula 
\[
\phi_{ZLB,t}>0\perp i_{t}>0.
\]

\end_inset


\end_layout

\begin_layout Itemize
When 
\begin_inset Formula $i_{t}>0$
\end_inset

, 
\begin_inset Formula $\phi_{ZLB,t}=0$
\end_inset

.
 Equilibrium conitions are
\begin_inset Formula 
\begin{align*}
 & i_{t}=-y_{t}+E_{t}y_{t+1}+E_{t}\pi_{t+1}+g_{t},\\
 & \pi_{t}=\kappa y_{t}+\beta E_{t}\pi_{t+1}+u_{t},\\
 & 0=\lambda y_{t}+\kappa\pi_{t}.
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
When 
\begin_inset Formula $i_{t}=0$
\end_inset

, 
\begin_inset Formula $\phi_{ZLB,t}>0$
\end_inset

.
 Equilibrium conitions are
\begin_inset Formula 
\begin{align*}
 & 0=-y_{t}+E_{t}y_{t+1}+E_{t}\pi_{t+1}+g_{t},\\
 & \pi_{t}=\kappa y_{t}+\beta E_{t}\pi_{t+1}+u_{t},\\
 & \phi_{ZLB,t}=\lambda y_{t}+\kappa\pi_{t}.
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Solving the model
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The solution has a form of 
\begin_inset Formula 
\[
\begin{array}{ccc}
y=y(g,u), & \pi=\pi(g,u), & i=i(g,u).\end{array}
\]

\end_inset


\end_layout

\begin_layout Itemize
Now consider the case in which there are only two-state g shocks.
 We know that the functions have only two values, i.e.,
\begin_inset Formula 
\[
\begin{array}{ccc}
y=\begin{cases}
y_{H},\\
y_{L},
\end{cases} & \pi=\begin{cases}
\pi_{H},\\
\pi_{L},
\end{cases} & i=\begin{cases}
i_{H},\\
i_{L}.
\end{cases}\end{array}
\]

\end_inset


\end_layout

\begin_layout Itemize
Again, we will look at analytical solution and numerical solution.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Analytical solution
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We assume that 
\begin_inset Formula $i_{H}>0$
\end_inset

 and 
\begin_inset Formula $i_{L}=0$
\end_inset

.
 Then we have
\begin_inset Formula 
\begin{align*}
 & y_{H}=(1-p_{H})y_{H}+p_{H}y_{L}-\left(i_{H}-\left[(1-p_{H})\pi_{H}+p_{H}\pi_{L}\right]\right)+g_{H},\\
 & \pi_{H}=\kappa y_{H}+\beta\left[(1-p_{H})\pi_{H}+p_{H}\pi_{L}\right],\\
 & 0=\lambda y_{H}+\kappa\pi_{H},\\
 & y_{L}=(1-p_{L})y_{H}+p_{L}y_{L}-\left(0-\left[(1-p_{L})\pi_{H}+p_{L}\pi_{L}\right]\right)+g_{L},\\
 & \pi_{L}=\kappa y_{L}+\beta\left[(1-p_{L})\pi_{H}+p_{L}\pi_{L}\right],\\
 & \phi_{L}=\lambda y_{L}+\kappa\pi_{L}.
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
There are 6 equations and 6 unknowns, so we can solve for the unknowns.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Joint shock process
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Let's get back to the general case.
 The shock processes are appoximated by Markov chains.
 That is,
\begin_inset Formula 
\begin{align*}
 & g_{m}\in\{g_{1},g_{2},...,g_{N_{g}}\},\\
 & u_{n}\in\{u_{1},u_{2},...,u_{N_{u}}\},
\end{align*}

\end_inset

 and
\begin_inset Formula 
\begin{align*}
P^{g}=\left[\begin{array}{cccc}
p_{11}^{g} & \cdots & \cdots & p_{1N_{g}}^{g}\\
p_{21}^{g} & \ddots &  & \vdots\\
\vdots &  & \ddots & \vdots\\
p_{N_{g}1}^{g} & \cdots & \cdots & p_{N_{g}N_{g}}^{g}
\end{array}\right],\quad & P^{u}=\left[\begin{array}{cccc}
p_{11}^{u} & \cdots & \cdots & p_{1N_{g}}^{u}\\
p_{21}^{u} & \ddots &  & \vdots\\
\vdots &  & \ddots & \vdots\\
p_{N_{g}1}^{u} & \cdots & \cdots & p_{N_{g}N_{g}}^{u}
\end{array}\right].
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Joint shock process, cont'd
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
2D grid coordinate with 
\begin_inset Formula $g$
\end_inset

 and 
\begin_inset Formula $u$
\end_inset

 represents the joint shock process.
 
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
For example, when 
\begin_inset Formula $N_{g}=N_{u}=2$
\end_inset


\begin_inset Formula 
\begin{align*}
 & s_{1}=(g_{1},u_{1}),\\
 & s_{2}=(g_{1},u_{2}),\\
 & s_{3}=(g_{2},u_{1}),\\
 & s_{4}=(g_{2},u_{2}).
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
Note that each index points to a pair of shocks, 
\begin_inset Formula $s_{k}=(g_{m(k)},u_{n(k)})$
\end_inset

.
\begin_inset VSpace medskip
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
A kronecker product of the transition matrices 
\begin_inset Formula $P^{s}=P^{g}\otimes P^{u}$
\end_inset

 is the transition matrix of the joint shock process.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Policy function iteration: Initial guess
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A guess of the policy functions
\begin_inset Formula 
\[
\begin{array}{ccc}
y=y^{(0)}(s), & \pi=\pi^{(0)}(s), & i=i^{(0)}(s).\end{array}
\]

\end_inset


\end_layout

\begin_layout Itemize
We know the values of the functions only at each 
\emph on
grid point
\emph default
, e.g.,
\begin_inset Formula 
\begin{align*}
y^{(0)}(s) & =[y_{1},y_{2},...,y_{N}]',\\
\pi^{(0)}(s) & =[\pi_{1},\pi_{2},...,\pi_{N}]',\\
i^{(0)}(s) & =[i_{1},i_{2},...,i_{N}]'.
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Policy function iteration: Solving at each grid
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
At each grid point 
\begin_inset Formula $k=1,...,N$
\end_inset

, we solve
\begin_inset Formula 
\begin{align*}
 & i_{k}=-y_{k}+y^{e}+\pi^{e}+g_{m(k)},\\
 & \pi_{k}=\kappa y_{k}+\beta\pi^{e}+u_{n(k)},\\
 & 0=\lambda y_{k}+\kappa\pi_{k},
\end{align*}

\end_inset

 for 
\begin_inset Formula $(y_{k},\pi_{k},i_{k})$
\end_inset

, where 
\begin_inset Formula 
\begin{align*}
y^{e} & =\sum_{l=1}^{N_{s}}P^{s}(k,l)y^{(0)}(s_{l}),\\
\pi^{e} & =\sum_{l=1}^{N_{s}}P^{s}(k,l)\pi^{(0)}(s_{l}).
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Policy function iteration: Solving at each grid, cont'd
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Check 
\begin_inset Formula $i_{k}\geq0$
\end_inset

.
 If not, we solve instead
\begin_inset Formula 
\begin{align*}
 & 0=-y_{k}+y^{e}+\pi^{e}+g_{m(k)},\\
 & \pi_{k}=\kappa y_{k}+\beta\pi^{e}+u_{n(k)},
\end{align*}

\end_inset

 for 
\begin_inset Formula $(y_{k},\pi_{k})$
\end_inset

, and set 
\begin_inset Formula $i_{k}=0$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Policy function iteration: Updating and convergence
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Once this is done for all the grid points, we update
\begin_inset Formula 
\begin{align*}
y^{(1)}(s) & =[y_{1},y_{2},...,y_{N}]',\\
\pi^{(1)}(s) & =[\pi_{1},\pi_{2},...,\pi_{N}]',\\
i^{(1)}(s) & =[i_{1},i_{2},...,i_{N}]'.
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
We repeat the procedure until the policy functions converge, i.e., 
\begin_inset Formula $\left\Vert x^{(j)}(s)-x^{(j-1)}(s)\right\Vert <\epsilon$
\end_inset

 for 
\begin_inset Formula $x\in\{y,\pi,i\}$
\end_inset

.
\end_layout

\end_deeper
\end_body
\end_document
